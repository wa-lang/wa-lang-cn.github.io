import{_ as l}from"./chunks/st0001.2b3876e3.js";import{_ as t,c as a,o as r,a as i}from"./app.7586e3b1.js";const g=JSON.parse('{"title":"凹语言 开源十日小计—兼路线图","description":"","frontmatter":{},"headers":[],"relativePath":"smalltalk/st0001.md"}'),s={name:"smalltalk/st0001.md"},e=i('<h1 id="凹语言-开源十日小计—兼路线图" tabindex="-1">凹语言 开源十日小计—兼路线图 <a class="header-anchor" href="#凹语言-开源十日小计—兼路线图" aria-hidden="true">#</a></h1><ul><li>时间：2022-07-30</li><li>撰稿：凹语言 开发组</li><li>转载请注明原文链接：<a href="https://wa-lang.org/smalltalk/st0001.html" target="_blank" rel="noreferrer">https://wa-lang.org/smalltalk/st0001.html</a></li></ul><hr><p>开源十日，项目组的心情——惊讶外加压力山大。</p><p>虽然对于凹语言™的构想始于2018年，但开发工作真正启动的时间，也不过2022年1月。如果把<strong>造出一个CPU</strong>作为目标，目前完成的工作也就相当于<strong>刚刚造出了可用的晶体管</strong>。然而以这样不成熟的早期状态，项目竟然出现在了CSDN、51CTO技术栈、InfoQ等媒体的资讯新闻中，我们的心情不能说惊讶吧，只能说非常惊讶。惊讶之余，面对Star数、群人数双双破百，项目组感到了巨大的压力：</p><p>我们很清楚，这一切关注的原因是什么。</p><hr><p>除编译框架搭建、基础组件搜集及验证之外，目前：</p><ul><li>LLIR后端实验性支持了字符串操作、四则运算、函数调用、包管理等</li><li>C/C++后端实验性支持了结构体、切片、函数及方法、流控制指令、多返回值等</li></ul><p>二者从长线来说有各自的站位，但短期内难以直接生成可执行程序，不便于爱好者测试及参与。接下来项目组工作重心将切换至wasm后端，这不仅是目前视野内生成可执行程序的最短路径，也是我们的主战场。</p><p>wasm后端第一阶段预计于2022年10月完成，届时它可能包含以下特性：</p><ul><li>布尔、8/16/32/64位整数、单双精度浮点数、字符串基本类型</li><li>切片类型</li><li>常用数值/逻辑单双目运算</li><li>常用流控制操作</li><li>结构体，匿名包含</li><li>函数及方法</li><li>基于RC的内存自动管理</li></ul><p><img src="'+l+'" alt="线路图"></p><hr>',14),o=[e];function _(n,p,c,m,h,d){return r(),a("div",null,o)}const C=t(s,[["render",_]]);export{g as __pageData,C as default};
