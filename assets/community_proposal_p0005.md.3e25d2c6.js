import{_ as e,c as l,o as a,a as t}from"./app.7586e3b1.js";const f=JSON.parse('{"title":"提案名称：井号和 fn 关键字调整","description":"","frontmatter":{},"headers":[{"level":2,"title":"提案内容","slug":"提案内容","link":"#提案内容","children":[]},{"level":2,"title":"提案日期","slug":"提案日期","link":"#提案日期","children":[]}],"relativePath":"community/proposal/p0005.md"}'),i={name:"community/proposal/p0005.md"},o=t('<h1 id="提案名称-井号和-fn-关键字调整" tabindex="-1">提案名称：井号和 fn 关键字调整 <a class="header-anchor" href="#提案名称-井号和-fn-关键字调整" aria-hidden="true">#</a></h1><ul><li>提案编号：5号</li><li>提案发起人：柴树杉</li><li>提案分类：普通</li></ul><h2 id="提案内容" tabindex="-1">提案内容 <a class="header-anchor" href="#提案内容" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">井号和 fn 关键字调整</p><ul><li><code>#</code> 作为特殊的编译时指令，而不是注释的语义，注释用 <code>// 行注释</code> 和 <code>/* 块注释*/</code><ul><li>可以用于支持 shell 脚本执行模式</li><li>参考 <a href="https://wa-lang.org/smalltalk/st0003.html" target="_blank" rel="noreferrer">https://wa-lang.org/smalltalk/st0003.html</a></li></ul></li><li><code>fn</code> 改成 <code>func</code>，保持和 WebAssembly 文本格式汇编关键字一致</li></ul></div><h2 id="提案日期" tabindex="-1">提案日期 <a class="header-anchor" href="#提案日期" aria-hidden="true">#</a></h2><p>2023年1月7日</p>',6),r=[o];function c(s,n,d,h,_,p){return a(),l("div",null,r)}const m=e(i,[["render",c]]);export{f as __pageData,m as default};
