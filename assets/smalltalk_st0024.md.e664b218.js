import{_ as t,c as s,o as r,a as e}from"./app.7586e3b1.js";const m=JSON.parse('{"title":"讨论组资料搬运——凹语言的优势","description":"","frontmatter":{},"headers":[{"level":2,"title":"与 Go 相比","slug":"与-go-相比","link":"#与-go-相比","children":[]},{"level":2,"title":"与 Rust 相比","slug":"与-rust-相比","link":"#与-rust-相比","children":[]},{"level":2,"title":"与 Cpp 相比","slug":"与-cpp-相比","link":"#与-cpp-相比","children":[]},{"level":2,"title":"与 C 相比","slug":"与-c-相比","link":"#与-c-相比","children":[]},{"level":2,"title":"与 AssemblyScript 相比","slug":"与-assemblyscript-相比","link":"#与-assemblyscript-相比","children":[]}],"relativePath":"smalltalk/st0024.md"}'),l={name:"smalltalk/st0024.md"},a=e('<h1 id="讨论组资料搬运——凹语言的优势" tabindex="-1">讨论组资料搬运——凹语言的优势 <a class="header-anchor" href="#讨论组资料搬运——凹语言的优势" aria-hidden="true">#</a></h1><ul><li>时间：2023-03-30</li><li>撰稿：凹语言 开发组</li><li>转载请注明原文链接：<a href="https://wa-lang.org/smalltalk/st0024.html" target="_blank" rel="noreferrer">https://wa-lang.org/smalltalk/st0024.html</a></li></ul><hr><p><strong>这本文章主要是记录「凹语言讨论组」讨论凹语言优势，没有捧一踩一的意思，每个语言都有每个语言的优点和缺点，这里主要讲凹语言的优势。</strong></p><h2 id="与-go-相比" tabindex="-1">与 Go 相比 <a class="header-anchor" href="#与-go-相比" aria-hidden="true">#</a></h2><ul><li><p><strong>Go</strong> 不支持 wasi（WebAssembly System Interface），<strong>Go</strong> 生成的 wasm 只能在浏览器跑；<strong>凹语言</strong>支持 wasi，这使得<strong>凹语言</strong>可以在实现 wasi 标准的虚拟机里面跑。</p></li><li><p>高并发是<strong>Go</strong>重要的设计目标，但是目前大多数 wasm 虚拟机环境并不具备这个能力。</p></li><li><p><strong>Go</strong>代码即使被编译成 wasm 模块，也很难作为 <strong>库</strong> 来被外部调用，它的runtime有自己的事件泵。</p></li></ul><h2 id="与-rust-相比" tabindex="-1">与 Rust 相比 <a class="header-anchor" href="#与-rust-相比" aria-hidden="true">#</a></h2><ul><li><strong>Rust</strong> 对程序员的心智负担大。</li></ul><h2 id="与-cpp-相比" tabindex="-1">与 Cpp 相比 <a class="header-anchor" href="#与-cpp-相比" aria-hidden="true">#</a></h2><ul><li><strong>Cpp</strong> 比较复杂。</li></ul><h2 id="与-c-相比" tabindex="-1">与 C 相比 <a class="header-anchor" href="#与-c-相比" aria-hidden="true">#</a></h2><ul><li><strong>凹语言</strong> 相对于 <strong>C</strong> 来说，比较易用。</li></ul><h2 id="与-assemblyscript-相比" tabindex="-1">与 AssemblyScript 相比 <a class="header-anchor" href="#与-assemblyscript-相比" aria-hidden="true">#</a></h2><ul><li><strong>AssemblyScript</strong> 不支持闭包等特性</li></ul><p>以上说的编译型语言都有一个大缺点，就是依赖本地环境，<strong>非wasm原生和自举</strong>。比如wa的playground是纯浏览器执行，不依赖服务。这是我们也最看重的一个因素。</p><p><strong>凹语言</strong> 还有一个优势就是可控，中文要平等对待。</p><p>每个语言都有每个语言设计的初衷，都会有些取舍，没有完美的语言，也相信<strong>凹语言</strong>会越来越好。</p><p>最后再接上柴大大的话： <em>所有过往皆为序章，一切好处都有代价，没有免费的午餐 --- 柴树杉</em></p>',18),n=[a];function i(o,c,h,p,d,g){return r(),s("div",null,n)}const _=t(l,[["render",i]]);export{m as __pageData,_ as default};
