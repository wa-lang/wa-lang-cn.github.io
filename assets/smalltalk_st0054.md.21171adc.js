import{_ as s,c as a,o as n,a as e}from"./app.7586e3b1.js";const D=JSON.parse('{"title":"凹语言支持Chrome内置AI","description":"","frontmatter":{},"headers":[],"relativePath":"smalltalk/st0054.md"}'),l={name:"smalltalk/st0054.md"},o=e(`<h1 id="凹语言支持chrome内置ai" tabindex="-1">凹语言支持Chrome内置AI <a class="header-anchor" href="#凹语言支持chrome内置ai" aria-hidden="true">#</a></h1><ul><li>时间：2024-09-28</li><li>撰稿：凹语言开发组</li><li>转载请注明原文链接：<a href="https://wa-lang.org/smalltalk/st0054.html" target="_blank" rel="noreferrer">https://wa-lang.org/smalltalk/st0054.html</a></li></ul><hr><p>凹语言是国内首个面向WebAssembly设计通用编程语言，也是目前被 <a href="https://landscape.cncf.io/?item=wasm--languages--wa-lang" target="_blank" rel="noreferrer">CNCF基金会wasm全景图</a> 收录的的唯一一个来自中国的开源编程语言项目。凹语言项目诞生时的一个愿景就是简化现代化WebAssembly网页应用的开发。这里我们将展示如何通过凹语言使用Chrome浏览器最新版本内置的Gemini Nano大语言模型。</p><p>先参考 <a href="https://chrome-ai.edgeone.app/" target="_blank" rel="noreferrer">Device Model: Chrome AI Gemini Nano</a>, 确保本地 Chrome AI 正常工作, 确保开发者控制台可成功执行 <code>await ai.assistant.create();</code> 程序。</p><p>示例代码:</p><div class="language-wa"><button title="Copy Code" class="copy"></button><span class="lang">wa</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">&quot;ai&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;"> main {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	ai.RequestSession(</span><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;">(session: ai.Session){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		session.PromptAsync(</span><span style="color:#A3BE8C;">&quot;Who are you?&quot;</span><span style="color:#D8DEE9FF;">, </span><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;">(res: </span><span style="color:#81A1C1;">string</span><span style="color:#D8DEE9FF;">) {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#88C0D0;">println</span><span style="color:#D8DEE9FF;">(res)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		})</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	})</span></span>
<span class="line"><span style="color:#D8DEE9FF;">}</span></span>
<span class="line"></span></code></pre></div><p>然后本地命令行环境执行<code>wa run</code>, 然后在打开的页面的开发者控制台可以看到以下输出:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#d8dee9ff;"> I am a large language model, trained by Google.</span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre></div><p>最后需要说明的是，Chrome内置AI还是一个是实验性，目前凹语言开发组的<code>ai</code>包也是在早期测试阶段。</p>`,10),t=[o];function p(r,c,i,d,m,y){return n(),a("div",null,t)}const E=s(l,[["render",p]]);export{D as __pageData,E as default};
