import{_ as e,c as a,o as r,a as i}from"./app.7586e3b1.js";const f=JSON.parse('{"title":"凹语言简介","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 起源与发展","slug":"_1-起源与发展","link":"#_1-起源与发展","children":[]},{"level":2,"title":"2. 凹语言特色","slug":"_2-凹语言特色","link":"#_2-凹语言特色","children":[]},{"level":2,"title":"3. 凹语言应用案例","slug":"_3-凹语言应用案例","link":"#_3-凹语言应用案例","children":[{"level":3,"title":"3.1. 早期项目","slug":"_3-1-早期项目","link":"#_3-1-早期项目","children":[]},{"level":3,"title":"3.2. 模拟器开发","slug":"_3-2-模拟器开发","link":"#_3-2-模拟器开发","children":[]},{"level":3,"title":"3.3. 教育领域的探索","slug":"_3-3-教育领域的探索","link":"#_3-3-教育领域的探索","children":[]},{"level":3,"title":"3.4. 硬件开发","slug":"_3-4-硬件开发","link":"#_3-4-硬件开发","children":[]},{"level":3,"title":"3.5. 游戏开发","slug":"_3-5-游戏开发","link":"#_3-5-游戏开发","children":[]}]},{"level":2,"title":"4. 开发者工具与社区","slug":"_4-开发者工具与社区","link":"#_4-开发者工具与社区","children":[{"level":3,"title":"5. 展望未来","slug":"_5-展望未来","link":"#_5-展望未来","children":[]}]}],"relativePath":"talks/wa-gallery/notes.md"}'),l={name:"talks/wa-gallery/notes.md"},h=i('<h1 id="凹语言简介" tabindex="-1">凹语言简介 <a class="header-anchor" href="#凹语言简介" aria-hidden="true">#</a></h1><p>各位好，我是柴树杉，凹语言联合发起人。今天，我将向大家介绍凹语言的最新进展及其在各个领域的应用案例。这是一个具有创新性和广泛潜力的编程语言项目。</p><h2 id="_1-起源与发展" tabindex="-1">1. 起源与发展 <a class="header-anchor" href="#_1-起源与发展" aria-hidden="true">#</a></h2><p>首先，让我们回顾一下凹语言的历史。这个项目始于2019年，经过三年的研发，于2022年7月正式开源。2023年8月，我们发布了最小可用版本（MVP），这标志着凹语言正式进入开发者社区的视野。到2024年11月，凹语言实现了所有预期的语法特性，成为一门功能完备的语言。更令人振奋的是，2025年1月，Dora SSR游戏引擎宣布支持使用凹语言进行开发，这为凹语言在游戏开发领域的应用打开了新的大门。</p><h2 id="_2-凹语言特色" tabindex="-1">2. 凹语言特色 <a class="header-anchor" href="#_2-凹语言特色" aria-hidden="true">#</a></h2><p>凹语言的设计目标是简洁、高效和易用。一个突出的特点是它的在线编程体验。凹语言提供了一个完全基于WebAssembly实现的在线Playground。这个工具无需依赖服务器，用户可以直接在浏览器中编写和运行代码。这种即时性和便捷性降低了学习和使用的门槛，非常适合初学者和教育场景。</p><h2 id="_3-凹语言应用案例" tabindex="-1">3. 凹语言应用案例 <a class="header-anchor" href="#_3-凹语言应用案例" aria-hidden="true">#</a></h2><p>接下来，我想分享一些我们用凹语言实现的项目案例。</p><h3 id="_3-1-早期项目" tabindex="-1">3.1. 早期项目 <a class="header-anchor" href="#_3-1-早期项目" aria-hidden="true">#</a></h3><p>在2022年，我们使用凹语言实现了一个Brainfuck虚拟机，以及经典的贪吃蛇游戏。这些项目展示了凹语言的基础能力和灵活性。</p><h3 id="_3-2-模拟器开发" tabindex="-1">3.2. 模拟器开发 <a class="header-anchor" href="#_3-2-模拟器开发" aria-hidden="true">#</a></h3><p>2023年，我们开发了NES小霸王游戏机模拟器。这不仅是对凹语言性能的测试，也展示了其在复古游戏开发中的潜力。同年，我们利用WebGPU技术，用凹语言模拟了火星小行星的运行。这为科学计算和数据可视化提供了一个新方向。</p><h3 id="_3-3-教育领域的探索" tabindex="-1">3.3. 教育领域的探索 <a class="header-anchor" href="#_3-3-教育领域的探索" aria-hidden="true">#</a></h3><p>2024年，凹语言开始支持P5儿童编程平台，旨在帮助孩子们更轻松地学习编程。这是我们向教育领域迈出的重要一步。</p><h3 id="_3-4-硬件开发" tabindex="-1">3.4. 硬件开发 <a class="header-anchor" href="#_3-4-硬件开发" aria-hidden="true">#</a></h3><p>同年，凹语言恢复支持了Arduino Nano 33硬件开发板。这一功能扩展使得凹语言在物联网和嵌入式开发领域也展现了潜力。</p><h3 id="_3-5-游戏开发" tabindex="-1">3.5. 游戏开发 <a class="header-anchor" href="#_3-5-游戏开发" aria-hidden="true">#</a></h3><p>凹语言支持Wasm4游戏开发，我们用它实现了多款经典小游戏，包括贪吃蛇、2048和俄罗斯方块。2025年初，Dora SSR游戏引擎的支持进一步巩固了凹语言在游戏开发领域的地位。</p><h2 id="_4-开发者工具与社区" tabindex="-1">4. 开发者工具与社区 <a class="header-anchor" href="#_4-开发者工具与社区" aria-hidden="true">#</a></h2><p>为了方便开发者，凹语言集成了GitHub Action，简化了CI/CD流程，使得代码测试和部署更加高效。与此同时，凹语言社区也在不断壮大，我们期待与更多开发者合作，共同探索凹语言的更多可能性。</p><h3 id="_5-展望未来" tabindex="-1">5. 展望未来 <a class="header-anchor" href="#_5-展望未来" aria-hidden="true">#</a></h3><p>通过这些案例，我们可以看到凹语言的广泛应用潜力。未来，我们计划进一步优化语言性能，扩展其在科学计算、游戏开发和教育领域的应用，并持续增强社区支持。</p><p>谢谢大家！</p>',23),t=[h];function d(n,_,s,c,o,p){return r(),a("div",null,t)}const b=e(l,[["render",d]]);export{f as __pageData,b as default};
