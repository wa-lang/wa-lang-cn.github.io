import{_ as s,c as n,o as a,a as l}from"./app.7586e3b1.js";const C=JSON.parse('{"title":"凹语言Native后端达到C语言性能","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. fib测试样例","slug":"_1-fib测试样例","link":"#_1-fib测试样例","children":[]},{"level":2,"title":"2. 性能对比","slug":"_2-性能对比","link":"#_2-性能对比","children":[]},{"level":2,"title":"3. wat2c的输出结果","slug":"_3-wat2c的输出结果","link":"#_3-wat2c的输出结果","children":[]},{"level":2,"title":"4. 小结","slug":"_4-小结","link":"#_4-小结","children":[]}],"relativePath":"smalltalk/st0055.md"}'),p={name:"smalltalk/st0055.md"},o=l(`<h1 id="凹语言native后端达到c语言性能" tabindex="-1">凹语言Native后端达到C语言性能 <a class="header-anchor" href="#凹语言native后端达到c语言性能" aria-hidden="true">#</a></h1><ul><li>时间：2024-10-06</li><li>撰稿：凹语言开发组</li><li>转载请注明原文链接：<a href="https://wa-lang.org/smalltalk/st0055.html" target="_blank" rel="noreferrer">https://wa-lang.org/smalltalk/st0055.html</a></li></ul><hr><p>凹语言是国内首个面向WebAssembly设计工业级通用编程语言，也是目前被 <a href="https://landscape.cncf.io/?item=wasm--languages--wa-lang" target="_blank" rel="noreferrer">CNCF基金会wasm全景图</a> 收录的的唯一一个来自中国的开源编程语言项目。凹语言项目开发组最近针对用户反馈开始支持到Native的编译，这是<code>wat2c</code>翻译wat代码到C代码的最新进展。</p><p>凹语言最初立项时有一个凹语言直接到C语言的后端，但是后来因为开发资源等诸多限制并没有继续推进。这里采用的是凹语言先到wasm后端的文本格式，然后再翻译到C语言，是采用<code>wa wat2c</code>命令实现。wasm后端部分的wat文本解析，wasm模块的优化和到C语言的翻译全部自研。</p><h2 id="_1-fib测试样例" tabindex="-1">1. fib测试样例 <a class="header-anchor" href="#_1-fib测试样例" aria-hidden="true">#</a></h2><p>先构造C语言版本fib例子：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#81A1C1;">int64_t</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fn_fib</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int64_t</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">n</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n </span><span style="color:#81A1C1;">&lt;=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fn_fib</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fn_fib</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">int64_t</span><span style="color:#D8DEE9FF;"> v </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fn_fib</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">46</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">fib(%d) = %lld</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">46</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> v</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div><p>然后是Go语言的fib例子：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">println</span><span style="color:#ECEFF4;">(</span><span style="color:#88C0D0;">fib</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">46</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fib</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n </span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> n </span><span style="color:#81A1C1;">&lt;=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fib</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fib</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div><p>再构造wat版本的fib等价实现：</p><div class="language-wasm"><button title="Copy Code" class="copy"></button><span class="lang">wasm</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">module</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  (</span><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">$fib</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">export</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">fib</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">) (</span><span style="color:#81A1C1;">param</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">$n</span><span style="color:#D8DEE9FF;"> i64) (</span><span style="color:#81A1C1;">result</span><span style="color:#D8DEE9FF;"> i64)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">local</span><span style="color:#81A1C1;">.get</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">$n</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">i64</span><span style="color:#81A1C1;">.const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">i64</span><span style="color:#81A1C1;">.le_u</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">if</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#8FBCBB;">i64</span><span style="color:#81A1C1;">.const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">return</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">end</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">local</span><span style="color:#81A1C1;">.get</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">$n</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">i64</span><span style="color:#81A1C1;">.const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">i64</span><span style="color:#81A1C1;">.sub</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">call</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">$fib</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">local</span><span style="color:#81A1C1;">.get</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">$n</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">i64</span><span style="color:#81A1C1;">.const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">i64</span><span style="color:#81A1C1;">.sub</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">call</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">$fib</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">i64</span><span style="color:#81A1C1;">.add</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  )</span></span>
<span class="line"><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-性能对比" tabindex="-1">2. 性能对比 <a class="header-anchor" href="#_2-性能对比" aria-hidden="true">#</a></h2><p>wat实现的fib纯函数，需要配置一个C语言的main:</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">val_t</span><span style="color:#D8DEE9FF;"> $args</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $args</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">i64</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">46</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">fn_fib_ret_t</span><span style="color:#D8DEE9FF;"> $result </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fn_fib</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">$args</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">])</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">fib(%d) = %lld</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">46</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> $result.$</span><span style="color:#D8DEE9;">R0</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div><p>所有的测试数据在主仓库的<code>tests/bench/wat2c</code>目录下。测试结果如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#d8dee9ff;">$ make wat2c</span></span>
<span class="line"><span style="color:#d8dee9ff;">go build -o fib_go_native.exe fib_go_native.go</span></span>
<span class="line"><span style="color:#d8dee9ff;">clang -O1 -o fib_c_native.exe _fib_c_native.c</span></span>
<span class="line"><span style="color:#d8dee9ff;">wa wat2c -o fib_wat2c_native.c fib_wat.txt &amp;&amp; clang -O1 -o fib_wat2c_native.exe fib_wat2c_main.c</span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span>
<span class="line"><span style="color:#d8dee9ff;">time ./fib_go_native.exe</span></span>
<span class="line"><span style="color:#d8dee9ff;">1836311903</span></span>
<span class="line"><span style="color:#d8dee9ff;">    8.81 real         8.00 user         0.06 sys</span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span>
<span class="line"><span style="color:#d8dee9ff;">time ./fib_c_native.exe</span></span>
<span class="line"><span style="color:#d8dee9ff;">fib(46) = 1836311903</span></span>
<span class="line"><span style="color:#d8dee9ff;">    6.50 real         5.24 user         0.05 sys</span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span>
<span class="line"><span style="color:#d8dee9ff;">time ./fib_wat2c_native.exe</span></span>
<span class="line"><span style="color:#d8dee9ff;">fib(46) = 1836311903</span></span>
<span class="line"><span style="color:#d8dee9ff;">    6.79 real         5.11 user         0.05 sys</span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre></div><p>可以发现，在<code>-O1</code>优化下wat2c输出的C代码最终性能和本地C代码实现持平，比Go语言的Native快20-30%。</p><h2 id="_3-wat2c的输出结果" tabindex="-1">3. wat2c的输出结果 <a class="header-anchor" href="#_3-wat2c的输出结果" aria-hidden="true">#</a></h2><p>可以看下 wat2c 输出的 C 代码：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#81A1C1;">typedef</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">union</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">val_t</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">i64_t</span><span style="color:#D8DEE9FF;"> i64</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">f64_t</span><span style="color:#D8DEE9FF;"> f64</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">i32_t</span><span style="color:#D8DEE9FF;"> i32</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">f32_t</span><span style="color:#D8DEE9FF;"> f32</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">val_t</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// func $fib (param $n i64) (result i64)</span></span>
<span class="line"><span style="color:#81A1C1;">typedef</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">struct</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">val_t</span><span style="color:#D8DEE9FF;"> $R0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">fn_fib_ret_t</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// func fib (param $n i64) (result i64)</span></span>
<span class="line"><span style="color:#81A1C1;">static</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">fn_fib_ret_t</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fn_fib</span><span style="color:#ECEFF4;">(</span><span style="color:#8FBCBB;">val_t</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">n</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">fn_fib_ret_t</span><span style="color:#D8DEE9FF;"> $result</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">u32_t</span><span style="color:#D8DEE9FF;"> $R_u32</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">u16_t</span><span style="color:#D8DEE9FF;"> $R_u16</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">u8_t</span><span style="color:#D8DEE9FF;">  $R_u8</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#8FBCBB;">val_t</span><span style="color:#D8DEE9FF;"> $R0</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> $R1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> $R2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">  $R0 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> n</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $</span><span style="color:#D8DEE9;">R1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $</span><span style="color:#D8DEE9;">R0</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i32</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">((</span><span style="color:#8FBCBB;">u64_t</span><span style="color:#ECEFF4;">)(</span><span style="color:#D8DEE9FF;">$</span><span style="color:#D8DEE9;">R0</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">&lt;=</span><span style="color:#ECEFF4;">(</span><span style="color:#8FBCBB;">u64_t</span><span style="color:#ECEFF4;">)(</span><span style="color:#D8DEE9FF;">$</span><span style="color:#D8DEE9;">R1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">$</span><span style="color:#D8DEE9;">R0</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i32</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    $</span><span style="color:#D8DEE9;">R0</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    $result.$R0 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> $R0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> $result</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $R0 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> n</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $</span><span style="color:#D8DEE9;">R1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $</span><span style="color:#D8DEE9;">R0</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-=</span><span style="color:#D8DEE9FF;"> $</span><span style="color:#D8DEE9;">R1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">fn_fib_ret_t</span><span style="color:#D8DEE9FF;"> $ret </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fn_fib</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">$R0</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    $R0 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> $ret.$R0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $R1 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> n</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $</span><span style="color:#D8DEE9;">R2</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $</span><span style="color:#D8DEE9;">R1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-=</span><span style="color:#D8DEE9FF;"> $</span><span style="color:#D8DEE9;">R2</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">fn_fib_ret_t</span><span style="color:#D8DEE9FF;"> $ret </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">fn_fib</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">$R1</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    $R1 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> $ret.$R0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $</span><span style="color:#D8DEE9;">R0</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+=</span><span style="color:#D8DEE9FF;"> $</span><span style="color:#D8DEE9;">R1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">i64</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  $result.$R0 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> $R0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> $result</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div><p>目前的实现基本是朴实的直译处理，每个wasm指令均通过C语言代码模拟。</p><h2 id="_4-小结" tabindex="-1">4. 小结 <a class="header-anchor" href="#_4-小结" aria-hidden="true">#</a></h2><p>wat2c 的真正工作从10.1国庆节开始，大约一周的时间实现的wat版本的fib到C的翻译，并且做到了和C在<code>-O1</code>相同的性能。这是一个很不错的结果，后续计划将C语言作为凹语言一个新的目标平台支持Native的编译需求。也欢迎对该技术方向感兴趣的同学一起共建。</p>`,24),e=[o];function c(t,E,r,F,y,D){return a(),n("div",null,e)}const A=s(p,[["render",c]]);export{C as __pageData,A as default};
